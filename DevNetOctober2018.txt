URL: https://198.18.133.200 User: admin Password: C1sco12345ÊÊModule 2:LOGIN:Method: POSTURL: https://198.18.133.200/api/mo/uni/tn-Heroes.jsonBODY:{    "fvTenant": {        "attributes": {            "name": "Heroes",            "descr": "Modify Tenant",            "status": "modified"        }    }}}READ:Method: GETURL: https://198.18.133.200/api/class/fvAp.json?UPDATE:Method: POSTURL: https://198.18.133.200/api/mo/uni/tn-Heroes.jsonBODY:{    "fvTenant": {        "attributes": {            "name": "Heroes",            "descr": "Modify Tenant",            "status": "modified"        }    }}ACI TOOLKIT:from credentials import *from acitoolkit import acitoolkit# connect to the apicsession = acitoolkit.Session(URL, LOGIN, PASSWORD)session.login()# create a new tenant new_tenant = acitoolkit.Tenant("Toolkit_Tenant")# commit the new configurationsession.push_to_apic(new_tenant.get_url(), new_tenant.get_json())COBRA SDK:from credentials import *import cobra.mit.accessimport cobra.mit.requestimport cobra.mit.sessionimport cobra.model.fvimport cobra.model.pol # connect to the apicauth = cobra.mit.session.LoginSession(URL, LOGIN, PASSWORD)session = cobra.mit.access.MoDirectory(auth)session.login()# create a new tenantroot = cobra.model.pol.Uni('')new_tenant = cobra.model.fv.Tenant(root, "Cobra_Tenant") # commit the new configurationconfig_request = cobra.mit.request.ConfigRequest()config_request.addMo(new_tenant)session.commit(config_request)MODULE 3:$ python acitoolkit/samples/aci-show-tenant-health.py APIC login username: adminAPIC URL: https://apicAPIC Password: from acitoolkit.acitoolkit import *from credentials import * session = Session(URL, LOGIN, PASSWORD)session.login()tenant_list = Tenant.get(session)for tenant in tenant_list:   print(tenant)$ cd code/acitoolkit/samples$ pwd/home/user/code/acitoolkit/acitoolkit/samples$$ python aci-show-epgs.pyAPIC login username: adminAPIC URL: https://198.18.133.200APIC Password: C1sco12345$ python aci-show-endpoints.py -l admin -u https://198.18.133.200 -p C1sco12345from credentials import *from acitoolkit.acitoolkit import *session = Session(URL, LOGIN, PASSWORD)session.login()tenant = Tenant("Example_Tenant")vrf = Context("Example_VRF", tenant)bridge_domain = BridgeDomain("Example_BD", tenant)bridge_domain.add_context(vrf)subnet = Subnet("Example_Subnet", bridge_domain)subnet.set_scope("public")subnet.set_addr("10.10.10.1/24")filter_http = Filter("http", tenant)filter_entry_tcp80 = FilterEntry("tcp-80", filter_http, etherT="ip", prot="tcp", dFromPort="http", dToPort="http")filter_sql = Filter("sql", tenant)filter_entry_tcp1433 = FilterEntry("tcp-1433", filter_sql, etherT="ip", prot="tcp", dFromPort="1433", dToPort="1433")contract_web = Contract("web", tenant)contract_subject_http = ContractSubject("http", contract_web)contract_subject_http.add_filter(filter_http)contract_database = Contract("database", tenant)contract_subject_sql = ContractSubject("sql", contract_database)contract_subject_sql.add_filter(filter_sql)app_profile = AppProfile("Example_App", tenant)epg_web = EPG("Web", app_profile)epg_web.add_bd(bridge_domain)epg_web.provide(contract_web)epg_web.consume(contract_database)epg_database = EPG("Database", app_profile)epg_database.add_bd(bridge_domain)epg_database.provide(contract_database)tenant_list = Tenant.get(session)tenant_listfor tn in tenant_list:   print(tn.name)print("\n{}\n\n{}".format(tenant.get_url(), tenant.get_json()))import jsonprint(json.dumps(tenant.get_json(), sort_keys=True, indent=2, separators=(',',':')))resp = session.push_to_apic(tenant.get_url(), data=tenant.get_json())if resp.ok:   print("\n{}: {}\n\n{} is ready for use".format(resp.status_code, resp.reason, tenant.name))else:   print("\n{}: {}\n\n{} was not created!\n\n Error: {}".format(resp.status_code, resp.reason, subnet.name, resp.content))new_tenant_list = Tenant.get(session)for tn in new_tenant_list:   print(tn.name)app_list = AppProfile.get(session, tenant)for app in app_list:   print(app.name)epg_list = EPG.get(session, app_profile, tenant)for epg in epg_list:   print(epg.name) # Close the sessionexit()$ cd acitoolkit/applications/aci-diagram$ dir$ python diagram.py -o heroes.png -t Heroes commonMODULE 4:$ cd LM-5501 intro-aci/dne-dci-intro-aci-mission_toolkit